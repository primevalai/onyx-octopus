[package]
name = "eventuali-core"
version = "0.1.1"
edition = "2021"
description = "High-performance event sourcing core library in Rust"
authors = ["PrimevalAI <info@primeval.ai>"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/primevalai/eventuali"

[dependencies]
tokio = { workspace = true }
sqlx = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
uuid = { workspace = true }
chrono = { workspace = true }
anyhow = { workspace = true }
thiserror = { workspace = true }
tracing = { workspace = true }
prost = { workspace = true }
prost-types = { workspace = true }
async-trait = { workspace = true }
futures = { workspace = true }
base64 = "0.22"
flate2 = "1.0"
sha2 = "0.10"
aes-gcm = "0.10"
pbkdf2 = "0.12"
hmac = "0.12"
regex = "1.10"
rusqlite = { workspace = true }

# Observability dependencies
opentelemetry = { workspace = true }
opentelemetry-otlp = { workspace = true }
opentelemetry_sdk = { workspace = true }
tracing-opentelemetry = { workspace = true }
prometheus = { workspace = true }
metrics = { workspace = true }
metrics-exporter-prometheus = { workspace = true }
log = { workspace = true }
tracing-log = { workspace = true }
tracing-subscriber = { workspace = true }

[build-dependencies]
prost-build = "0.13"

[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports"] }

[features]
default = ["postgres", "sqlite", "observability"]
postgres = []
sqlite = []
observability = []

[[bench]]
name = "event_store_benchmarks"
harness = false